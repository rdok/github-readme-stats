AWSTemplateFormatVersion: 2010-09-09
Transform: [ AWS::Serverless-2016-10-31 ]
Parameters:
  GitHubPersonalAccessToken:
    Type: String
    Description: 'No scopes required. https://github.com/settings/tokens/new'
Resources:
  Router:
    Type: AWS::Serverless::Function
    Properties:
      Handler: aws-infrastructure/router.main
      CodeUri: ..
      Runtime: nodejs14.x
      Timeout: 30 # Limited by API Gateway
      Environment:
        Variables:
          PAT_1: !Ref GitHubPersonalAccessToken
      Events:
        Index:
          Type: HttpApi
          Properties: { Path: '/', Method: get }
        Proxy:
          Type: HttpApi
          Properties: { Path: '/{proxy+}', Method: get }
#  CDN:
#    Type: AWS::CloudFront::Distribution
#    Properties:
#      DistributionConfig:
#        Enabled: true
#        Origins:
#          - Id: RouterOriginId
#            DomainName: !Sub '${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com'
#            CustomOriginConfig:
#              OriginProtocolPolicy: 'https-only'
#        DefaultCacheBehavior:
#          AllowedMethods: [ GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE ]
#          TargetOriginId: LaravelOriginId
#          ForwardedValues:
#            QueryString: true
#            Cookies:
#              Forward: all
#            # Do not forward `Host` as it messes up the API Gateway
#            Headers: [ 'Accept', 'Accept-Language', 'Origin', 'Referer' ]
#          ViewerProtocolPolicy: redirect-to-https
#        CacheBehaviors:
#          - PathPattern: 'assets/*'
#            TargetOriginId: Assets
#            AllowedMethods: [ GET, HEAD ]
#            ViewerProtocolPolicy: redirect-to-https
#            ForwardedValues: # No need for all that with assets
#              QueryString: 'false'
#              Cookies: { Forward: none }
#            Compress: true

Outputs:
  RouterEndpoint:
    Value:
      Fn::Sub: 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/'
